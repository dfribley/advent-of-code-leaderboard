name: Release & Publish

on:
  push:
    tags:
    - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release. outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest]
        runtime: [linux-x64, win-x64, osx-x64, osx-arm64]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Application
        shell: bash
        run: |
          TAG=${{ github.ref_name }}
          
          cd AoC.Leaderboard.Cli
          dotnet publish -c Release \
            -r ${{ matrix.runtime }} \
            --self-contained true \
            -o "../aoclb-${{ matrix.runtime }}" \
            /p:Version=${TAG#v} \
            /p:DebugType=None \
            /p:DebugSymbols=false

      - name: Pack
        id: pack
        shell: bash
        run: |
          release_name="aoclb-${{ matrix.runtime }}"
          
          if [ "${{ matrix.runtime }}" == "win-x64" ]; then
            release_asset="${release_name}.zip"
            release_asset_type="application/zip"

            7z a -tzip "${release_asset}" "./${release_name}/*"
          else
            release_asset="${release_name}.tar.gz"
            release_asset_type="application/gzip"

            tar czvf "${release_asset}" "$release_name"
          fi

          echo "asset_name=${release_asset}" >> $GITHUB_OUTPUT
          echo "release_asset_type=${release_asset_type}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.pack.outputs.asset_name }}
          asset_name: ${{ steps.pack.outputs.asset_name }}
          asset_content_type: ${{ steps.pack.outputs.release_asset_type }}